# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true
        bind:
            $projectDir: '%kernel.project_dir%'
            $env: '%kernel.environment%'
            string $spotifyClientId: '%env(SPOTIFY_CLIENT_ID)%'
            string $spotifyClientSecret: '%env(SPOTIFY_CLIENT_SECRET)%'
            string $redirectUri: '%env(SPOTIFY_AUTHORIZATION_REDIRECT_URI)%'
            string $spotifyAccountApi: '%env(SPOTIFY_ACCOUNT_API)%'
            string $spotifyWebApi: '%env(SPOTIFY_WEB_API)%'
            $dataDirectory: '%kernel.project_dir%/var/data'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    guzzle_client.spotify.account:
        public: true
        class: GuzzleHttp\Client
        arguments:
            - { base_uri: "%env(SPOTIFY_ACCOUNT_API)%", http_errors: false, verify: false }

    guzzle_client.spotify.web:
        public: true
        class: GuzzleHttp\Client
        arguments:
            - { base_uri: "%env(SPOTIFY_WEB_API)%", http_errors: false, verify: false }

    GuzzleHttp\ClientInterface $spotifyWebClient: '@guzzle_client.spotify.web'
    GuzzleHttp\ClientInterface $spotifyAccountClient: '@guzzle_client.spotify.account'

    app.services.spotify_track_finder_service:
        class: App\TrackFinder\Services\SpotifyTrackFinderService

    # Register the CacheInterface
    Symfony\Contracts\Cache\CacheInterface:
        factory: [ 'App\Utils\CacheFactory', 'create' ]

    App\Playlist\Services\PlaylistStorageService:
        arguments:
            - '@App\Playlist\Services\PlaylistFileStorageService'
            -
    App\Utils\BearerTokenProvider: '@App\Utils\CachedSpotifyBearerTokenProvider'

    App\Utils\CachedSpotifyBearerTokenProvider:
        arguments:
            - '@Symfony\Contracts\Cache\CacheInterface'
            - '@App\Utils\SpotifyAuthenticator'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
